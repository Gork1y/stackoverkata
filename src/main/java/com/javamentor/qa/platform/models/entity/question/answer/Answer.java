package com.javamentor.qa.platform.models.entity.question.answer;import java.io.Serializable;import java.time.LocalDateTime;import java.util.ArrayList;import java.util.List;import java.util.UUID;import javax.persistence.*;import org.hibernate.annotations.CreationTimestamp;import org.hibernate.annotations.Type;import org.hibernate.annotations.UpdateTimestamp;import com.javamentor.qa.platform.models.entity.IdentifiableEntity;import com.javamentor.qa.platform.models.entity.question.Question;import com.javamentor.qa.platform.models.entity.user.User;import lombok.Getter;import lombok.Setter;@Entity@Getter@Setter@Table(name = "answer")public class Answer extends IdentifiableEntity<Answer, UUID> implements Serializable {    @CreationTimestamp    @Column(name = "persist_date", updatable = false)    @Type(type = "org.hibernate.type.LocalDateTimeType")    private LocalDateTime persistDateTime;    @Column(name = "update_date", nullable = false)    @Type(type = "org.hibernate.type.LocalDateTimeType")    @UpdateTimestamp    private LocalDateTime updateDateTime;    @ManyToOne(fetch = FetchType.LAZY, optional = false)    @JoinColumn(name = "question_id")    private Question question;    @ManyToOne(fetch = FetchType.LAZY, optional = false)    @JoinColumn(name = "user_id")    private User user;    @Lob    @Type(type = "org.hibernate.type.TextType")    private String htmlBody;    private Boolean isHelpful;    private Boolean isDeleted;    private Boolean isDeletedByModerator;    @Type(type = "org.hibernate.type.LocalDateTimeType")    private LocalDateTime dateAcceptTime;    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "answer", orphanRemoval = true)    private List<CommentAnswer> commentAnswers;    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "answer", orphanRemoval = true)    private List<VoteAnswer> voteAnswers = new ArrayList<>();}